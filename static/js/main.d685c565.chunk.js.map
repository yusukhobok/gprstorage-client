{"version":3,"sources":["Global.js","logic/AuthLogic.js","logic/Logic.js","components/MainMenu.js","components/Sign.js","components/Welcome.js","components/ProjectOptions.js","components/Projects.js","components/RadImage.js","components/Radargram.js","components/DialogOpenRad.js","components/Radargrams.js","App.js","serviceWorker.js","index.js"],"names":["API_URL","AuthLogic","this","authorized","username","password","auth","axios","post","res","console","log","message","Logic","authLogic","projects","currentProjectId","radargrams","project","find","item","id","undefined","projectId","length","get","getAuth","setRadargrams","data","sort","pr1","pr2","name","notes","getProjects","put","delete","radargramId","formData","headers","openProject","rad1","rad2","startNum","finishNum","stage","MainMenu","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","className","onSelect","props","onSelectMenuElement","logged","Link","disabled","eventKey","Button","variant","React","Component","Sign","updateState","newState","setState","prevState","onChangeUsername","event","target","value","onChangePassword","onOk","a","state","preventDefault","loading","onOkSign","onCancel","onCancelSign","alert","error","Alert","spinner","Spinner","animation","role","Modal","show","onHide","Header","closeButton","Title","isRegistration","Body","Form","Group","Label","Control","type","onChange","required","placeholder","Footer","onClick","Welcome","Jumbotron","ProjectOptions","onCancelProjectOptions","onChangeName","onChangeNotes","onChangeProjectOptions","Projects","clearState","isOpenOptions","isAddNewProject","findProjectById","addProject","changeProject","openDialogToAddProject","openDialogToChangeProject","Number","deleteProject","Container","CardColumns","map","index","array","Card","style","width","key","Text","href","createion_datetime","Plot","createPlotlyComponent","Plotly","RadImage","layout","autosize","yaxis","autorange","title","text","xaxis","useResizeHandler","config","scrollZoom","responsive","height","Radargram","deleteRadargram","radargram","getRadargramLink","onCollapseRadargram","Accordion","as","Table","striped","bordered","hover","stage_between_traces","time_base","traces_count","samples_count","distance_between_antennas","GPR_unit","antenna_name","frequency","creation_datetime","DialogOpenRad","setLoading","onFileChange","files","selectedFile","onFileUpload","FormData","append","fileUpload","btnCaption","size","aria-hidden","onCancelOpenRad","File","Radargrams","isOpenDialog","cancelOpenRad","openDialog","addRadargram","activeKey","selectedKey","closeProject","Item","Tab","defaultActiveKey","Row","Col","sm","ListGroup","action","Content","Pane","App","registrate","logic","sign_error","logIn","logOut","waiting","is_loaded_data","updateProject","page","window","open","link","uploadRadargram","getCurrentComponent","getCurrentProject","status","CurrentComponent","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"qPAAaA,G,OAAU,8C,iBCuDRC,E,WAlDX,aAAe,oBACXC,KAAKC,YAAa,EAClBD,KAAKE,SAAW,OAChBF,KAAKG,SAAW,M,sDAIhB,MAAO,CAAEC,KAAM,CAAEF,SAAUF,KAAKE,SAAUC,SAAUH,KAAKG,a,0EAG5CD,EAAUC,G,gGAEDE,IAAMC,KAAN,UAAcR,EAAd,uBAA4C,CAAEI,WAAUC,a,cAApEI,E,OACNC,QAAQC,IAAI,aAAcF,GAC1BP,KAAKC,YAAa,EAClBD,KAAKE,SAAWA,EAChBF,KAAKG,SAAWA,E,kBACT,CAAC,ODpBK,KCoBgB,QAAW,yK,yCAGxCK,QAAQC,IAAI,KAAMC,S,kBACX,CAAC,ODvBQ,QCuBgB,QAAW,sQ,wLAKvCR,EAAUC,G,gGAEIE,IAAMC,KAAN,UAAcR,EAAd,iBAAsC,CAAEI,WAAUC,a,cAA9DI,E,OACNC,QAAQC,IAAI,QAASF,GACrBP,KAAKC,YAAa,EAClBD,KAAKE,SAAWA,EAChBF,KAAKG,SAAWA,E,kBACT,CAAC,ODpCK,KCoCgB,QAAW,yK,yCAGxCK,QAAQC,IAAI,KAAMC,S,kBACX,CAAC,ODvCQ,QCuCgB,QAAW,8O,kJAM/CV,KAAKC,YAAa,EAClBD,KAAKE,SAAW,GAChBF,KAAKG,SAAW,O,KCkHTQ,E,WA/JX,aAAe,oBACXX,KAAKY,UAAY,IAAIb,EACrBC,KAAKa,SAAW,GAChBb,KAAKc,iBAAmB,KACxBd,KAAKe,WAAa,G,gEAGD,IAAD,OAChB,GAA8B,OAA1Bf,KAAKc,iBACP,OAAO,KAEP,IAAME,EAAUhB,KAAKa,SAASI,MAAK,SAAAC,GAAI,OAAIA,EAAKC,KAAO,EAAKL,oBAC5D,YAAgBM,IAAZJ,EACK,KAEAA,I,2EAIGK,G,mFAELrB,KAAKY,UAAUX,W,yCAAmB,CAAC,OFvBxB,QEuBgD,QAAW,6J,UAC9C,IAAzBD,KAAKa,SAASS,O,yCAAqB,CAAC,OFxBxB,QEwBgD,QAAW,oH,uBACzDjB,IAAMkB,IAAN,UAAazB,EAAb,qBAAiCuB,EAAjC,eAAyDrB,KAAKY,UAAUY,W,cAApFjB,E,OACNP,KAAKyB,cAAclB,EAAImB,KAAKX,YAC5Bf,KAAKc,iBAAmBO,E,kBAChB,CAAC,OF7BI,KE6BiB,QAAW,mK,2DAGlC,CAAC,OF/BQ,QE+BgB,QAAW,KAAMX,U,iRAM5CV,KAAKY,UAAUX,W,yCAAmB,CAAC,OFrCxB,QEqCgD,QAAW,6J,cAC3EO,QAAQC,IAAIT,KAAKY,UAAUY,W,SACTnB,IAAMkB,IAAN,UAAazB,EAAb,aAAiCE,KAAKY,UAAUY,W,cAA5DjB,E,OACNC,QAAQC,IAAI,cAAeF,GAC3BP,KAAKa,SAAWN,EAAImB,KAAKb,SACzBb,KAAKa,SAASc,MAAK,SAACC,EAAKC,GAAN,OAAcD,EAAIT,GAAKU,EAAIV,MAC9CnB,KAAKc,iBAAmB,K,kBAChB,CAAC,OF7CI,KE6CiB,QAAW,iKAAgC,SAAYd,KAAKa,W,2DAGnF,CAAC,OF/CQ,QE+CgB,QAAW,KAAMH,U,8LAIpCW,G,mFAERrB,KAAKY,UAAUX,W,yCAAmB,CAAC,OFrDxB,QEqDgD,QAAW,6J,uBACzDI,IAAMkB,IAAN,UAAazB,EAAb,qBAAiCuB,GAAarB,KAAKY,UAAUY,W,cAAzEjB,E,OACNC,QAAQC,IAAIF,G,kBACJ,CAAC,OFzDI,KEyDiB,QAAW,iKAAgC,QAAWA,EAAImB,KAAKV,U,2DAGtF,CAAC,OF3DQ,QE2DgB,QAAW,KAAMN,U,2LAIxCoB,EAAMC,G,mFAEV/B,KAAKY,UAAUX,W,yCAAmB,CAAC,MAAS,6J,uBAC/BI,IAAMC,KAAN,UAAcR,EAAd,aAAkC,CAAEgC,OAAMC,SAAS/B,KAAKY,UAAUY,W,cAA9EjB,E,gBACAP,KAAKgC,c,cACXxB,QAAQC,IAAIF,G,kBACJ,CAAC,OFtEI,KEsEiB,QAAW,iKAAgC,QAAWA,EAAImB,KAAKV,U,2DAItF,CAAC,OFzEQ,QEyEgB,QAAW,KAAMN,U,gMAIrCW,EAAWS,EAAMC,G,mFAExB/B,KAAKY,UAAUX,W,yCAAmB,CAAC,MAAS,6J,uBAC/BI,IAAM4B,IAAN,UAAanC,EAAb,qBAAiCuB,GAAa,CAAES,OAAMC,SAAS/B,KAAKY,UAAUY,W,cAA1FjB,E,gBACAP,KAAKgC,c,gCACH,CAAC,OFnFI,KEmFiB,QAAW,iKAAgC,QAAWzB,EAAImB,KAAKV,U,2DAGtF,CAAC,OFrFQ,QEqFgB,QAAW,KAAMN,U,kMAIrCW,G,mFAEPrB,KAAKY,UAAUX,W,yCAAmB,CAAC,MAAS,6J,uBAC/BI,IAAM6B,OAAN,UAAgBpC,EAAhB,qBAAoCuB,GAAarB,KAAKY,UAAUY,W,cAA5EjB,E,gBACAP,KAAKgC,c,cACXxB,QAAQC,IAAIF,G,kBACJ,CAAC,OFhGI,KEgGiB,QAAW,mK,2DAGlC,CAAC,OFlGQ,QEkGgB,QAAW,KAAMG,U,iMAIlCW,EAAWc,G,mFAErBnC,KAAKY,UAAUX,W,yCAAmB,CAAC,MAAS,6J,uBAC/BI,IAAMkB,IAAN,UAAazB,EAAb,qBAAiCuB,EAAjC,uBAAyDc,EAAzD,SAA6EnC,KAAKY,UAAUY,W,cAAxGjB,E,yBACE,CAAC,OF3GI,KE2GiB,QAAW,iKAAgC,KAAQA,EAAImB,O,yDAG9E,CAAC,OF7GQ,QE6GgB,QAAW,KAAMhB,U,iMAInCW,EAAWc,G,mFAEpBnC,KAAKY,UAAUX,W,yCAAmB,CAAC,MAAS,6J,uBAC/BI,IAAM6B,OAAN,UAAgBpC,EAAhB,qBAAoCuB,EAApC,uBAA4Dc,GAAenC,KAAKY,UAAUY,W,cAAtGjB,E,OACNC,QAAQC,IAAIF,G,kBACJ,CAAC,OFvHI,KEuHiB,QAAW,mK,2DAGlC,CAAC,OFzHQ,QEyHgB,QAAW,KAAMG,U,kMAInCW,EAAWe,G,mFAEpBpC,KAAKY,UAAUX,W,yCAAmB,CAAC,MAAS,6J,uBAC/BI,IAAMC,KAAN,UAAcR,EAAd,qBAAkCuB,EAAlC,eAA0De,EAAU,CAClFC,QAAS,CACP,eAAgB,wBAEnBrC,KAAKY,UAAUY,W,cAJZjB,E,OAKNC,QAAQC,IAAI,kBAAmBF,G,SAClBP,KAAKsC,YAAYjB,G,mGAGvB,CAAC,OFzIQ,QEyIgB,QAAW,KAAMX,U,uJAI3CK,GACVf,KAAKe,WAAaA,EAClBf,KAAKe,WAAWY,MAAK,SAACY,EAAMC,GAAP,OAAgBD,EAAKpB,GAAKqB,EAAKrB,Q,yEAIxCE,EAAWc,EAAaM,EAAUC,EAAWC,G,mFAEhD3C,KAAKY,UAAUX,W,yCAAmB,CAAC,OFrJxB,QEqJgD,QAAW,6J,uBACzDI,IAAMkB,IAAN,UAAazB,EAAb,qBAAiCuB,EAAjC,uBAAyDc,EAAzD,8BAA0FM,EAA1F,YAAsGC,EAAtG,YAAmHC,GAAS3C,KAAKY,UAAUY,W,cAAvJjB,E,OACNC,QAAQC,IAAI,YAAaF,G,kBACjB,CAAC,OFzJI,KEyJiB,QAAW,mK,2DAGlC,CAAC,OF3JQ,QE2JgB,QAAW,KAAMG,U,yJC7H9CkC,E,uKA1BX,OACE,kBAACC,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,MACxB,kBAACF,EAAA,EAAOG,MAAR,kIACA,kBAACH,EAAA,EAAOI,OAAR,CAAeC,gBAAc,qBAC7B,kBAACL,EAAA,EAAOM,SAAR,CAAiBhC,GAAG,oBAClB,kBAACiC,EAAA,EAAD,CAAKC,UAAU,UAAUC,SAAUtD,KAAKuD,MAAMC,sBAE1CxD,KAAKuD,MAAME,QACX,kBAAC,WAAD,KACE,kBAACL,EAAA,EAAIM,KAAL,CAAUC,UAAU,EAAOC,SAAS,gBAApC,sEACA,kBAACR,EAAA,EAAIM,KAAL,CAAUC,UAAU,EAAOC,SAAS,SAApC,6BAGH5D,KAAKuD,MAAME,QACV,kBAAC,WAAD,KACE,kBAACI,EAAA,EAAD,CAAQC,QAAQ,WAAW9D,KAAKuD,MAAMrD,UACtC,kBAACkD,EAAA,EAAIM,KAAL,CAAUC,UAAU,EAAOC,SAAS,QAApC,0C,GAlBOG,IAAMC,W,kCC0GdC,E,kDAtGb,WAAYV,GAAQ,IAAD,8BACjB,cAAMA,IAQRW,YAAc,SAACC,GACb,EAAKC,UAAS,SAACC,GACb,OAAO,2BACFA,GACAF,OAbU,EAmBnBG,iBAAmB,SAACC,GAClB,IAAMrE,EAAWqE,EAAMC,OAAOC,MAC9B,EAAKP,YAAY,CAAEhE,cArBF,EAwBnBwE,iBAAmB,SAACH,GAClB,IAAMpE,EAAWoE,EAAMC,OAAOC,MAC9B,EAAKP,YAAY,CAAE/D,cA1BF,EA6BnBwE,KA7BmB,uCA6BZ,WAAOJ,GAAP,SAAAK,EAAA,8DACSxD,IAAVmD,EADC,oDAEuB,KAAxB,EAAKM,MAAM3E,UAA2C,KAAxB,EAAK2E,MAAM1E,SAFxC,wDAGLoE,EAAMO,iBACN,EAAKZ,YAAY,CAAEa,SAAS,IAJvB,SAKC,EAAKxB,MAAMyB,SAAS,EAAKH,MAAM3E,SAAU,EAAK2E,MAAM1E,UALrD,OAML,EAAK+D,YAAY,CAAEa,SAAS,IANvB,2CA7BY,wDAsCnBE,SAAW,SAACV,GACVA,EAAMO,iBACN,EAAKvB,MAAM2B,aAAa,EAAKL,MAAM3E,SAAU,EAAK2E,MAAM1E,WAtCxD,EAAK0E,MAAQ,CACX3E,SAAU,GACVC,SAAU,GACV4E,SAAS,GALM,E,qDA4CjB,IAAII,EAAQ,KACRnF,KAAKuD,MAAM6B,QACbD,EAAQ,kBAACE,EAAA,EAAD,CAAOvB,QAAQ,UACpB9D,KAAKuD,MAAM6B,QAIhB,IAAIE,EAAU,KAOd,OANItF,KAAK6E,MAAME,UACbO,EAAU,kBAACC,EAAA,EAAD,CAASC,UAAU,SAASC,KAAK,UACzC,0BAAMpC,UAAU,WAAhB,gBAKF,kBAACqC,EAAA,EAAD,CAAOC,MAAM,EAAMC,OAAQ5F,KAAKiF,UAC9B,kBAACS,EAAA,EAAMG,OAAP,CAAcC,aAAW,GACvB,kBAACJ,EAAA,EAAMK,MAAP,KAAc/F,KAAKuD,MAAMyC,eAAiB,qEAAgB,6BAE5D,kBAACN,EAAA,EAAMO,KAAP,KACE,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,MAAN,KACE,kBAACD,EAAA,EAAKE,MAAN,uCACA,kBAACF,EAAA,EAAKG,QAAN,CACEC,KAAK,OACL7B,MAAOzE,KAAK6E,MAAM3E,SAClBqG,SAAUvG,KAAKsE,iBACfkC,UAAQ,EACRC,YAAY,4IAGhB,kBAACP,EAAA,EAAKC,MAAN,KACE,kBAACD,EAAA,EAAKE,MAAN,6CACA,kBAACF,EAAA,EAAKG,QAAN,CACEC,KAAK,WACL7B,MAAOzE,KAAK6E,MAAM1E,SAClBoG,SAAUvG,KAAK0E,iBACf8B,UAAQ,EACRC,YAAY,sFAIjBtB,GAEH,kBAACO,EAAA,EAAMgB,OAAP,KACIpB,EACF,kBAACzB,EAAA,EAAD,CAAQC,QAAQ,UAAU6C,QAAS3G,KAAK2E,MAAxC,gBAGA,kBAACd,EAAA,EAAD,CAAQC,QAAQ,YAAY6C,QAAS3G,KAAKiF,UAA1C,8C,GA9FSlB,IAAMC,W,SCKV4C,E,uKARX,OACI,kBAACC,EAAA,EAAD,KACA,4E,GAJc9C,IAAMC,W,0BC2Cb8C,E,uKAtCX,OACE,kBAACpB,EAAA,EAAD,CAAOC,KAAM3F,KAAKuD,MAAMoC,KAAMC,OAAQ5F,KAAKuD,MAAMwD,wBAC/C,kBAACrB,EAAA,EAAMG,OAAP,CAAcC,aAAW,GACvB,kBAACJ,EAAA,EAAMK,MAAP,qGAEF,kBAACL,EAAA,EAAMO,KAAP,KACE,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,MAAN,KACE,kBAACD,EAAA,EAAKE,MAAN,2BACA,kBAACF,EAAA,EAAKG,QAAN,CACEC,KAAK,OACL7B,MAAOzE,KAAKuD,MAAMzB,KAClByE,SAAUvG,KAAKuD,MAAMyD,gBAGzB,kBAACd,EAAA,EAAKC,MAAN,KACE,kBAACD,EAAA,EAAKE,MAAN,2EACA,kBAACF,EAAA,EAAKG,QAAN,CACEC,KAAK,WACL7B,MAAOzE,KAAKuD,MAAMxB,MAClBwE,SAAUvG,KAAKuD,MAAM0D,mBAK7B,kBAACvB,EAAA,EAAMgB,OAAP,KACE,kBAAC7C,EAAA,EAAD,CAAQC,QAAQ,YAAY6C,QAAS3G,KAAKuD,MAAMwD,wBAAhD,wCAGA,kBAAClD,EAAA,EAAD,CAAQC,QAAQ,UAAU6C,QAAS3G,KAAKuD,MAAM2D,wBAA9C,sB,GA/BmBnD,IAAMC,WC0IpBmD,E,kDAvIb,WAAY5D,GAAQ,IAAD,8BACjB,cAAMA,IAUR6D,WAAa,WACX,EAAKlD,YAAY,CACfpC,KAAM,GACNC,MAAO,GACPsF,eAAe,EACfvG,iBAAkB,KAClBwG,iBAAiB,KAjBF,EAuBnBpD,YAAc,SAACC,GACb,EAAKC,UAAS,SAACC,GACb,OAAO,2BACFA,GACAF,OA3BU,EAgCnBoD,gBAAkB,SAACpG,GACjB,OAAO,EAAKoC,MAAM1C,SAASI,MAAK,SAAAC,GAAI,OAAIA,EAAKC,KAAOA,MAjCnC,EAoCnB6F,aAAe,SAACzC,GACd,IAAMzC,EAAOyC,EAAMC,OAAOC,MAC1B,EAAKP,YAAY,CAAEpC,UAtCF,EAyCnBmF,cAAgB,SAAC1C,GACf,IAAMxC,EAAQwC,EAAMC,OAAOC,MAC3B,EAAKP,YAAY,CAAEnC,WA3CF,EA8CnByF,WA9CmB,uCA8CN,WAAO1F,EAAMC,GAAb,SAAA6C,EAAA,sEACL,EAAKrB,MAAMiE,WAAW1F,EAAMC,GADvB,OAEX,EAAKqF,aAFM,2CA9CM,0DAmDnBK,cAnDmB,uCAmDH,WAAOpG,EAAWS,EAAMC,GAAxB,SAAA6C,EAAA,sEACR,EAAKrB,MAAMkE,cAAcpG,EAAWS,EAAMC,GADlC,OAEd,EAAKqF,aAFS,2CAnDG,4DAwDnBL,uBAxDmB,sBAwDM,sBAAAnC,EAAA,sDACvB,EAAKwC,aADkB,2CAxDN,EA4DnBF,uBA5DmB,sBA4DM,sBAAAtC,EAAA,0DACnB,EAAKC,MAAMyC,gBADQ,gCAEf,EAAKE,WAAW,EAAK3C,MAAM/C,KAAM,EAAK+C,MAAM9C,OAF7B,6CAIf,EAAK0F,cAAc,EAAK5C,MAAM/D,iBAAkB,EAAK+D,MAAM/C,KAAM,EAAK+C,MAAM9C,OAJ7D,2CA5DN,EAmEnB2F,uBAAyB,WACvB,EAAKxD,YAAY,CAAEpC,KAAM,GAAIC,MAAO,GAAIsF,eAAe,EAAMvG,iBAAkB,KAAMwG,iBAAiB,KApErF,EAuEnBK,0BAA4B,SAACpD,GAC3B,IAAMzD,EAAmB8G,OAAOrD,EAAMC,OAAOrD,IACvCH,EAAU,EAAKuG,gBAAgBzG,QACrBM,IAAZJ,GACJ,EAAKkD,YAAY,CACfpC,KAAMd,EAAQc,KAAMC,MAAOf,EAAQe,MAAOsF,eAAe,EAAMvG,mBAC/DwG,iBAAiB,KA7EF,EAiFnBhF,YAjFmB,uCAiFL,WAAOiC,GAAP,eAAAK,EAAA,6DACN9D,EAAmB8G,OAAOrD,EAAMC,OAAOrD,IADjC,SAEN,EAAKoC,MAAMjB,YAAYxB,GAFjB,2CAjFK,wDAsFnB+G,cAtFmB,uCAsFH,WAAOtD,GAAP,eAAAK,EAAA,6DACR9D,EAAmB8G,OAAOrD,EAAMC,OAAOrD,IAD/B,SAER,EAAKoC,MAAMsE,cAAc/G,GAFjB,2CAtFG,sDAEjB,EAAK+D,MAAQ,CACX/C,KAAM,GACNC,MAAO,GACPsF,eAAe,EACfvG,iBAAkB,KAClBwG,iBAAiB,GAPF,E,qDA2FT,IAAD,OACP,OACE,kBAAC,WAAD,KACE,kBAACQ,EAAA,EAAD,KACE,0EACA,kBAACC,EAAA,EAAD,KAEI/H,KAAKuD,MAAM1C,SAASmH,KAAI,SAAC9G,EAAM+G,EAAOC,GAAd,OACtB,kBAACC,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAO,SAAWC,IAAKpH,EAAKC,IACzC,kBAACgH,EAAA,EAAKlC,KAAN,KACE,kBAACkC,EAAA,EAAKpC,MAAN,KAAa7E,EAAKY,KAAlB,KAA0BZ,EAAKC,GAA/B,KACA,kBAACgH,EAAA,EAAKI,KAAN,KAAYrH,EAAKa,OACjB,kBAACoG,EAAA,EAAKzE,KAAN,CAAW8E,KAAK,IAAIrH,GAAID,EAAKC,GAAIwF,QAAS,EAAKrE,aAA/C,8CACA,kBAAC6F,EAAA,EAAKzE,KAAN,CAAW8E,KAAK,IAAIrH,GAAID,EAAKC,GAAIwF,QAAS,EAAKgB,2BAA/C,oDACA,kBAACQ,EAAA,EAAKzE,KAAN,CAAW8E,KAAK,IAAIrH,GAAID,EAAKC,GAAIwF,QAAS,EAAKkB,eAA/C,+CAEF,kBAACM,EAAA,EAAKzB,OAAN,KACE,2BAAOrD,UAAU,cAAcnC,EAAKuH,yBAK5C,kBAACN,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAO,UACpB,kBAACF,EAAA,EAAKlC,KAAN,KACE,kBAACkC,EAAA,EAAKzE,KAAN,CAAW8E,KAAK,IAAI7B,QAAS3G,KAAK0H,wBAAlC,+HAMR,kBAAC,EAAD,CACE/B,KAAM3F,KAAK6E,MAAMwC,cACjBvF,KAAM9B,KAAK6E,MAAM/C,KACjBC,MAAO/B,KAAK6E,MAAM9C,MAClBiF,aAAchH,KAAKgH,aACnBC,cAAejH,KAAKiH,cACpBF,uBAAwB/G,KAAK+G,uBAC7BG,uBAAwBlH,KAAKkH,8B,GAjIhBnD,IAAMC,W,iFCHvB0E,E,MAAOC,GAAsBC,KAuDpBC,E,kDApDX,WAAYtF,GAAQ,IAAD,8BACf,cAAMA,IAUV6D,WAAa,WACT,EAAKlD,YAAY,KAVjB,EAAKW,MAAQ,GAFE,E,qDAsBf,OACI,kBAAC6D,EAAD,CACI/C,KAAM3F,KAAKuD,MAAMoC,KACjBjE,KAAM,CACF,CAII4E,KAAM,YAGdwC,OAAQ,CACJC,UAAU,EACVC,MAAO,CAAEC,UAAW,WAAYC,MAAO,CAAEC,KAAM,YAC/CC,MAAO,CAAEF,MAAO,CAAEC,KAAM,YAE5BE,kBAAkB,EAClBC,OAAQ,CAEJC,YAAY,EACZC,YAAY,GAEhBpB,MAAO,CAAEC,MAAO,QAASoB,OAAQ,c,GA7C1B1F,IAAMC,WC2Gd0F,E,kDAvGX,WAAYnG,GAAQ,IAAD,8BACf,cAAMA,IAUV6D,WAAa,WACT,EAAKlD,YAAY,KAZF,EAqBnByF,gBArBmB,sBAqBD,8BAAA/E,EAAA,6DACRvD,EAAY,EAAKkC,MAAMvC,QAAQG,GAC/BgB,EAAc,EAAKoB,MAAMqG,UAAUzI,GAF3B,SAGR,EAAKoC,MAAMoG,gBAAgBtI,EAAWc,GAH9B,2CArBC,EA2BnB0H,iBA3BmB,sBA2BA,8BAAAjF,EAAA,6DACTvD,EAAY,EAAKkC,MAAMvC,QAAQG,GAC/BgB,EAAc,EAAKoB,MAAMqG,UAAUzI,GAF1B,SAGT,EAAKoC,MAAMsG,iBAAiBxI,EAAWc,GAH9B,2CA3BA,EAiCnB2H,oBAAsB,WAClBtJ,QAAQC,IAAI,UAhCZ,EAAKoE,MAAQ,GAFE,E,qDAsCf,OAEI,kBAACkF,EAAA,EAAD,KACI,kBAAC5B,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKtC,OAAN,KACI,kBAACkE,EAAA,EAAU9G,OAAX,CAAkB+G,GAAInG,IAAQC,QAAQ,OAAOF,SAAS,KAAtD,2DAIJ,kBAACmG,EAAA,EAAU5G,SAAX,CAAoBS,SAAS,KACzB,kBAACuE,EAAA,EAAKlC,KAAN,KACI,kBAACgE,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,GACzB,+BACI,4BACI,gFACA,kFAGR,+BACI,gCAAK,gFAAL,IAAuB,4BAAKpK,KAAKuD,MAAMqG,UAAU9H,MAAjD,KACA,gCAAK,kGAAL,IAA0B,4BAAK9B,KAAKuD,MAAMqG,UAAU7H,OAApD,KACA,gCAAK,mIAAL,IAAkC,4BAAK/B,KAAKuD,MAAMqG,UAAUS,sBAA5D,KACA,gCAAK,2JAAL,IAAsC,4BAAKrK,KAAKuD,MAAMqG,UAAUU,WAAhE,KACA,gCAAK,2HAAL,IAA+B,4BAAKtK,KAAKuD,MAAMqG,UAAUW,cAAzD,KACA,gCAAK,oMAAL,IAA4C,4BAAKvK,KAAKuD,MAAMqG,UAAUY,eAAtE,KACA,gCAAK,0LAAL,IAA4C,4BAAKxK,KAAKuD,MAAMqG,UAAUa,2BAAtE,KACA,gCAAK,2HAAL,IAA+B,4BAAKzK,KAAKuD,MAAMqG,UAAUc,UAAzD,KACA,gCAAK,0EAAL,IAAsB,4BAAK1K,KAAKuD,MAAMqG,UAAUe,cAAhD,KACA,gCAAK,iKAAL,IAAuC,4BAAK3K,KAAKuD,MAAMqG,UAAUgB,WAAjE,KACA,gCAAK,yGAAL,IAA4B,4BAAK5K,KAAKuD,MAAMqG,UAAUiB,mBAAtD,UAMpB,kBAAC1C,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKtC,OAAN,KACI,kBAACkE,EAAA,EAAU9G,OAAX,CAAkB+G,GAAInG,IAAQC,QAAQ,OAAOF,SAAS,IAAI+C,QAAS3G,KAAK8J,qBAAxE,6EAIJ,kBAACC,EAAA,EAAU5G,SAAX,CAAoBS,SAAS,KACzB,kBAACuE,EAAA,EAAKlC,KAAN,KACI,kBAAC,EAAD,CAAUjF,QAAShB,KAAKuD,MAAMvC,QAAS4I,UAAW5J,KAAKuD,MAAMqG,eAIzE,kBAACzB,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKtC,OAAN,KACI,kBAACkE,EAAA,EAAU9G,OAAX,CAAkB+G,GAAInG,IAAQC,QAAQ,OAAOF,SAAS,KAAtD,qDAIJ,kBAACmG,EAAA,EAAU5G,SAAX,CAAoBS,SAAS,KACzB,kBAACuE,EAAA,EAAKlC,KAAN,KACI,2BAAG,uBAAGuC,KAAK,IAAI7B,QAAS3G,KAAK2J,iBAA1B,wHACH,2BAAG,uBAAGnB,KAAK,IAAI7B,QAAS3G,KAAK6J,kBAA1B,gI,GA/FP9F,IAAMC,WCsFf8G,E,kDAxFb,WAAYvH,GAAQ,IAAD,8BACjB,cAAMA,IAORwH,WAAa,SAAChG,GACZ,EAAKX,UAAS,SAACC,GACb,OAAO,2BACFA,GADL,IAEEU,QAASA,QAZI,EAiBnBiG,aAAe,SAACzG,GAEd,GADA/D,QAAQC,IAAI,gBACS,OAAjB8D,EAAMC,QACgB,MAAtBD,EAAMC,OAAOyG,MAAjB,CACA,IAAMC,EAAe3G,EAAMC,OAAOyG,MAAM,GACxCzK,QAAQC,IAAIyK,GACZ,EAAK9G,UAAS,SAACC,GACb,OAAO,2BACFA,GADL,IAEE6G,aAAcA,SA1BD,EA+BnBC,aA/BmB,uCA+BJ,WAAO5G,GAAP,eAAAK,EAAA,sDACbpE,QAAQC,IAAI,gBAEoB,OAA5B,EAAKoE,MAAMqG,aACN,OAEH9I,EAAW,IAAIgJ,UACVC,OACP,OACA,EAAKxG,MAAMqG,aACX,EAAKrG,MAAMqG,aAAapJ,MAE1B,EAAKiJ,YAAW,GAChB,EAAKxH,MAAM+H,WAAWlJ,IAbX,2CA/BI,sDAEjB,EAAKyC,MAAQ,CACXqG,aAAc,KACdnG,SAAS,GAJM,E,qDAiDjB,IAAMwG,EAAcvL,KAAK6E,MAAME,QAG7B,kBAACQ,EAAA,EAAD,CACEyE,GAAG,OACHxE,UAAU,SACVgG,KAAK,KACL/F,KAAK,SACLgG,cAAY,SAPd,6CAWF,OACE,kBAACvF,EAAA,EAAD,KACE,kBAACR,EAAA,EAAD,CAAOC,KAAM3F,KAAKuD,MAAMoC,KAAMC,OAAQ5F,KAAKuD,MAAMmI,iBAC/C,kBAAChG,EAAA,EAAMG,OAAP,CAAcC,aAAW,GACvB,kBAACJ,EAAA,EAAMK,MAAP,mIAEF,kBAACL,EAAA,EAAMO,KAAP,KACE,kBAACC,EAAA,EAAKyF,KAAN,CAAWxK,GAAG,WAAWoF,SAAUvG,KAAKgL,gBAE1C,kBAACtF,EAAA,EAAMgB,OAAP,KACE,kBAAC7C,EAAA,EAAD,CAAQC,QAAQ,YAAY6C,QAAS3G,KAAKuD,MAAMmI,iBAAhD,wCAGA,kBAAC7H,EAAA,EAAD,CACEC,QAAQ,UACRH,SAAsC,OAA5B3D,KAAK6E,MAAMqG,aACrBvE,QAAS3G,KAAKmL,cAEbI,U,GAhFaxH,IAAMC,WC0GnB4H,E,kDArGb,WAAYrI,GAAQ,IAAD,8BACjB,cAAMA,IAMRW,YAAc,SAACC,GACb,EAAKC,UAAS,SAACC,GACb,OAAO,2BACFA,GACAF,OAXU,EAgBnBiD,WAAa,WACX,EAAKlD,YAAY,CACf2H,cAAc,KAlBC,EAsBnBC,cAAgB,WACd,EAAK5H,YAAY,CACf2H,cAAc,KAxBC,EA4BnBE,WAAa,WACX,EAAK7H,YAAY,CACf2H,cAAc,KA9BC,EAkCnBP,WAAa,SAAClJ,GACZ,EAAKmB,MAAMyI,aAAa,EAAKzI,MAAMvC,QAAQG,GAAIiB,IAjC/C,EAAKyC,MAAQ,CACXgH,cAAc,GAHC,E,qDAsCT,IAAD,OACP,OACE,kBAAC,WAAD,KACE,kBAAC,EAAD,CACElG,KAAQ3F,KAAK6E,MAAMgH,aACnBH,gBAAmB1L,KAAK8L,cACxBR,WAActL,KAAKsL,aAErB,kBAAClI,EAAA,EAAD,CACE6I,UAAU,QACV3I,SAAU,SAAC4I,GAAD,OAAiB,EAAK3I,MAAM4I,iBAEtC,kBAAC/I,EAAA,EAAIgJ,KAAL,KACE,kBAAChJ,EAAA,EAAIM,KAAL,CAAU8E,KAAK,KAAf,4DAEF,kBAACpF,EAAA,EAAIgJ,KAAL,KACE,kBAAChJ,EAAA,EAAIM,KAAL,CAAUE,SAAS,WAAWD,UAAQ,GAAtC,yCACU,2BAAI3D,KAAKuD,MAAMvC,QAAQc,SAKrC,kBAACuK,EAAA,EAAIvE,UAAL,CAAe3G,GAAG,0BAA0BmL,iBAAiB,UAC3D,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACC,EAAA,EAAD,KAEI1M,KAAKuD,MAAMxC,WAAWiH,KAAI,SAAC9G,EAAM+G,EAAOC,GAAd,OACxB,kBAACwE,EAAA,EAAUN,KAAX,CAAgBO,QAAM,EAACnE,KAAI,WAAMtH,EAAKC,IAAMmH,IAAG,iBAAYpH,EAAKC,KAC7DD,EAAKY,UAKd,kBAAC4K,EAAA,EAAUN,KAAX,CAAgB9D,IAAG,eACjB,uBAAGE,KAAK,IAAI7B,QAAS3G,KAAK+L,YAA1B,sDAGJ,kBAACS,EAAA,EAAD,CAAKC,GAAI,IACP,kBAACJ,EAAA,EAAIO,QAAL,KAEI5M,KAAKuD,MAAMxC,WAAWiH,KAAI,SAAC9G,EAAM+G,EAAOC,GAAd,OACxB,kBAACmE,EAAA,EAAIQ,KAAL,CAAUjJ,SAAQ,WAAM1C,EAAKC,IAAMmH,IAAG,oBAAepH,EAAKC,KACxD,kBAAC,EAAD,CACEH,QAAS,EAAKuC,MAAMvC,QACpB4I,UAAW1I,EACXoH,IAAG,gBAAWpH,EAAKC,IACnBwI,gBAAiB,EAAKpG,MAAMoG,gBAC5BE,iBAAkB,EAAKtG,MAAMsG,gC,GAvF5B9F,IAAMC,WCqOhB8I,E,kDAjOb,aAAe,IAAD,8BACZ,gBAiBF5I,YAAc,SAACC,GACb,EAAKC,UAAS,SAACC,GACb,OAAO,2BACFA,GACAF,OAtBK,EA4Bd4I,WA5Bc,uCA4BD,WAAO7M,EAAUC,GAAjB,eAAAyE,EAAA,sEACO,EAAKoI,MAAMpM,UAAUmM,WAAW7M,EAAUC,GADjD,OZzCU,QY0CfI,EADK,QAEJ,QACL,EAAKyB,cACL,EAAKkC,YAAY,CAAE,OZvCI,gBYuCqB+I,WAAY,QAGxD,EAAK/I,YAAY,CAAE+I,WAAY1M,EAAG,UAPzB,2CA5BC,0DAuCd2M,MAvCc,uCAuCN,WAAOhN,EAAUC,GAAjB,eAAAyE,EAAA,sEACY,EAAKoI,MAAMpM,UAAUsM,MAAMhN,EAAUC,GADjD,OZpDe,QYqDfI,EADA,QAEC,QACL,EAAKyB,cACL,EAAKkC,YAAY,CAAE,OZlDI,gBYkDqB+I,WAAY,QAGxD,EAAK/I,YAAY,CAAE+I,WAAY1M,EAAG,UAP9B,2CAvCM,0DAmDd4M,OAnDc,sBAmDL,sBAAAvI,EAAA,sDACP,EAAKV,YAAY,CAAE,OZ9DU,oBY8DmB+I,WAAY,OADrD,2CAnDK,EAwDdjL,YAxDc,sBAwDA,sBAAA4C,EAAA,0DACR,EAAKC,MAAMuI,QADH,wDAEZ,EAAKlJ,YAAY,CAAEkJ,SAAS,IAFhB,SAGM,EAAKJ,MAAMhL,cAHjB,OZrES,OYqET,OAIL,OACL,EAAKkC,YAAY,CAAEmJ,gBAAgB,EAAMD,SAAS,IAElD,EAAKlJ,YAAY,CAAEkJ,SAAS,IAPlB,2CAxDA,EAmEd5F,WAnEc,uCAmED,WAAO1F,EAAMC,GAAb,SAAA6C,EAAA,0DACP,EAAKC,MAAMuI,QADJ,wDAEX,EAAKlJ,YAAY,CAAEkJ,SAAS,IAFjB,SAGO,EAAKJ,MAAMxF,WAAW1F,EAAMC,GAHnC,OZhFU,OYgFV,OAIJ,OACL,EAAKmC,YAAY,CAAEmJ,gBAAgB,EAAMD,SAAS,IAElD,EAAKlJ,YAAY,CAAEkJ,SAAS,IAPnB,2CAnEC,0DA8Ed3F,cA9Ec,uCA8EE,WAAOpG,EAAWS,EAAMC,GAAxB,SAAA6C,EAAA,0DACV,EAAKC,MAAMuI,QADD,wDAEd,EAAKlJ,YAAY,CAAEkJ,SAAS,IAFd,SAGI,EAAKJ,MAAMM,cAAcjM,EAAWS,EAAMC,GAH9C,OZ3FO,OY2FP,OAIP,OACL,EAAKmC,YAAY,CAAEmJ,gBAAgB,EAAMD,SAAS,IAElD,EAAKlJ,YAAY,CAAEkJ,SAAS,IAPhB,2CA9EF,4DAyFdvF,cAzFc,uCAyFE,WAAOxG,GAAP,SAAAuD,EAAA,0DACV,EAAKC,MAAMuI,QADD,wDAEd,EAAKlJ,YAAY,CAAEkJ,SAAS,IAFd,SAGI,EAAKJ,MAAMnF,cAAcxG,GAH7B,OZtGO,OYsGP,OAIP,OACL,EAAK6C,YAAY,CAAEmJ,gBAAgB,EAAMD,SAAS,IAElD,EAAKlJ,YAAY,CAAEkJ,SAAS,IAPhB,2CAzFF,wDAmGd9K,YAnGc,uCAmGA,WAAOjB,GAAP,SAAAuD,EAAA,0DACR,EAAKC,MAAMuI,QADH,wDAEZ,EAAKlJ,YAAY,CAAEkJ,SAAS,IAFhB,SAGM,EAAKJ,MAAM1K,YAAYjB,GAH7B,OZhHS,OYgHT,OAIL,OACL,EAAK6C,YAAY,CAAEmJ,gBAAgB,EAAMD,SAAS,EAAOG,KZ5GhC,oBY+GzB,EAAKrJ,YAAY,CAAEkJ,SAAS,EAAOG,KZhHZ,kBYwGb,2CAnGA,wDA+GdpB,aAAe,WACb,EAAKjI,YAAY,CAAEqJ,KZrHM,mBYKb,EAoHd5D,gBApHc,uCAoHI,WAAOtI,EAAWc,GAAlB,SAAAyC,EAAA,0DACZ,EAAKC,MAAMuI,QADC,wDAEhB,EAAKlJ,YAAY,CAAEkJ,SAAS,IAFZ,SAGE,EAAKJ,MAAMrD,gBAAgBtI,EAAWc,GAHxC,OZjIK,OYiIL,OAIT,OACL,EAAK+B,YAAY,CAAEkJ,SAAS,EAAOG,KZ9HZ,kBYgIvB,EAAKrJ,YAAY,CAAEkJ,SAAS,IAPd,2CApHJ,0DA+HdvD,iBA/Hc,uCA+HK,WAAOxI,EAAWc,GAAlB,eAAAyC,EAAA,sEACC,EAAKoI,MAAMnD,iBAAiBxI,EAAWc,GADxC,OACX5B,EADW,OAEjBiN,OAAOC,KAAKlN,EAAImN,MAFC,2CA/HL,0DAqId1B,aArIc,uCAqIC,WAAO3K,EAAWe,GAAlB,SAAAwC,EAAA,0DACT,EAAKC,MAAMuI,QADF,wDAEb,EAAKlJ,YAAY,CAAEkJ,SAAS,IAFf,SAGK,EAAKJ,MAAMW,gBAAgBtM,EAAWe,GAH3C,UZlJQ,OYkJR,OAIN,OAJM,iCAKL,EAAKE,YAAYjB,GALZ,+BAQX,EAAK6C,YAAY,CAAEkJ,SAAS,EAAOG,KZjJV,oBYyId,4CArID,0DAmJd/J,oBAAsB,SAAC0I,GACrB,OAAQA,GACN,IAAK,eACH,EAAKhI,YAAY,CAAE,OZ/JQ,wBYgK3B,MACF,IAAK,QACH,EAAKA,YAAY,CAAE,OZjKI,oBYkKvB,MACF,IAAK,OACH,EAAKiJ,WA5JG,EAoKdS,oBAAsB,WACpB,OAAQ,EAAK/I,MAAM0I,MACjB,IZ3KuB,gBY4KrB,OACE,kBAAC,EAAD,CACE1M,SAAU,EAAKmM,MAAMnM,SACrBC,iBAAkB,EAAKkM,MAAMlM,iBAC7B0G,WAAY,EAAKA,WACjBC,cAAe,EAAKA,cACpBnF,YAAa,EAAKA,YAClBuF,cAAe,EAAKA,gBAG1B,IZrLyB,kBYsLvB,OACE,kBAAC,EAAD,CACE9G,WAAY,EAAKiM,MAAMjM,WACvBC,QAAS,EAAKgM,MAAMa,oBACpB1B,aAAc,EAAKA,aACnBxC,gBAAiB,EAAKA,gBACtBE,iBAAkB,EAAKA,iBACvBmC,aAAc,EAAKA,iBAvL3B,EAAKgB,MAAQ,IAAIrM,EACjB,EAAKkE,MAAQ,CACXiJ,OZXuB,gBYYvBP,KZVuB,gBYWvBN,WAAY,KACZI,gBAAgB,EAChBD,SAAS,GARC,E,0KAcZpN,KAAKgC,c,qIAoLL,IAAI+L,EAAmB,KACvB,OAAQ/N,KAAK6E,MAAMiJ,QACjB,IZ3MuB,gBY6MnBC,EADE/N,KAAK6E,MAAMuI,QACM,kBAAC,EAAD,MAGApN,KAAK4N,sBAE1B,MACF,IZtN2B,oBYuNzBG,EAAmB,kBAAC,EAAD,MACnB,MACF,IZxN6B,sBYyN3BA,EAAmB,kBAAC,EAAD,CAAM/H,gBAAgB,EAAMZ,MAAOpF,KAAK6E,MAAMoI,WAAYjI,SAAUhF,KAAK+M,WAAY7H,aAAclF,KAAKmN,SAC3H,MACF,IZ1NyB,kBY2NvBY,EAAmB,kBAAC,EAAD,CAAM/H,gBAAgB,EAAOZ,MAAOpF,KAAK6E,MAAMoI,WAAYjI,SAAUhF,KAAKkN,MAAOhI,aAAclF,KAAKmN,SAK3H,OACE,kBAAC,WAAD,KACE,kBAAC,EAAD,CAAUjN,SAAUF,KAAKgN,MAAMpM,UAAUV,SAAUuD,OZjO9B,kBYiOsCzD,KAAK6E,MAAMiJ,OAA0BtK,oBAAqBxD,KAAKwD,sBACzHuK,O,GA5NShK,IAAMC,WCFJgK,QACW,cAA7BR,OAAOS,SAASC,UAEe,UAA7BV,OAAOS,SAASC,UAEhBV,OAAOS,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA3J,GACL5E,QAAQ4E,MAAMA,EAAM1E,a","file":"static/js/main.d685c565.chunk.js","sourcesContent":["export const API_URL = \"https://gprstorage-stage.herokuapp.com/api\";\n\nexport const OK_STATUS = \"OK\";\nexport const ERROR_STATUS = \"Error\";\n\nexport const STATUS_NOT_LOGGED = \"STATUS_NOT_LOGGED\";\nexport const STATUS_REGISTRATING = \"STATUS_REGISTRATING\";\nexport const STATUS_ENTERING = \"STATUS_ENTERING\";\nexport const STATUS_LOGGED = \"STATUS_LOGGED\";\n\nexport const PAGE_PROJECTS = \"PAGE_PROJECTS\";\nexport const PAGE_RADARGRAMS = \"PAGE_RADARGRAMS\";","import axios from \"axios\";\n\nimport {API_URL, OK_STATUS, ERROR_STATUS} from \"../Global\";\n\nclass AuthLogic {\n    constructor() {\n        this.authorized = true; //false;\n        this.username = \"yuri\"; //\"\";\n        this.password = \"123\"; //\"\";\n    }\n\n    getAuth() {\n        return { auth: { username: this.username, password: this.password } }\n    }\n\n    async registrate(username, password) {\n        try {\n            const res = await axios.post(`${API_URL}/users/registration`, { username, password });\n            console.log(\"registrate\", res);\n            this.authorized = true;\n            this.username = username;\n            this.password = password;\n            return {\"status\": OK_STATUS, \"message\": \"Регистрация выполнена успешно\"}\n        }\n        catch (error) {\n            console.log(error.message);\n            return {\"status\": ERROR_STATUS, \"message\": \"Пользователь с таким именем уже зарегистрирован\"}\n        }\n    }\n\n\n    async logIn(username, password) {\n        try {\n            const res = await axios.post(`${API_URL}/users/signin`, { username, password });\n            console.log(\"logIn\", res);\n            this.authorized = true;\n            this.username = username;\n            this.password = password;\n            return {\"status\": OK_STATUS, \"message\": \"Регистрация выполнена успешно\"}\n        }\n        catch (error) {\n            console.log(error.message);\n            return {\"status\": ERROR_STATUS, \"message\": \"Имя пользователя или пароль введены неверно\"}\n        }\n    }\n\n\n    logOut() {\n        this.authorized = false;\n        this.username = \"\";\n        this.password = \"\";\n    }\n\n}\n\nexport default AuthLogic;","import AuthLogic from \"./AuthLogic\";\nimport {API_URL, OK_STATUS, ERROR_STATUS} from \"../Global\";\nimport axios from \"axios\";\n\nclass Logic {\n    constructor() {\n        this.authLogic = new AuthLogic();\n        this.projects = [];\n        this.currentProjectId = null;\n        this.radargrams = [];\n    }\n\n    getCurrentProject() {\n        if (this.currentProjectId === null)\n          return null;\n        else {\n          const project = this.projects.find(item => item.id === this.currentProjectId)\n          if (project === undefined)\n            return null;\n          else\n            return project;\n        }\n    }\n\n    async openProject(projectId) {\n        try {\n            if (!this.authLogic.authorized) return {\"status\": ERROR_STATUS, \"message\": \"Пользователь не авторизован\"}\n            if (this.projects.length === 0) return {\"status\": ERROR_STATUS, \"message\": \"Нет ни одного проекта\"}\n            const res = await axios.get(`${API_URL}/projects/${projectId}/radargrams`, this.authLogic.getAuth());\n            this.setRadargrams(res.data.radargrams);\n            this.currentProjectId = projectId;\n            return ({\"status\": OK_STATUS, \"message\": \"Операция завершилась успешно\"});\n        }\n        catch (error) {\n            return {\"status\": ERROR_STATUS, \"message\": error.message}\n        }\n    }\n\n    async getProjects() {\n        try {\n            if (!this.authLogic.authorized) return {\"status\": ERROR_STATUS, \"message\": \"Пользователь не авторизован\"}\n            console.log(this.authLogic.getAuth());\n            const res = await axios.get(`${API_URL}/projects`, this.authLogic.getAuth());\n            console.log(\"getProjects\", res);\n            this.projects = res.data.projects;\n            this.projects.sort((pr1, pr2) => pr1.id - pr2.id)\n            this.currentProjectId = null\n            return ({\"status\": OK_STATUS, \"message\": \"Операция завершилась успешно\", \"projects\": this.projects});\n        }\n        catch (error) {\n            return {\"status\": ERROR_STATUS, \"message\": error.message}\n        }\n    }\n\n    async getProjectById(projectId) {\n        try {\n            if (!this.authLogic.authorized) return {\"status\": ERROR_STATUS, \"message\": \"Пользователь не авторизован\"}\n            const res = await axios.get(`${API_URL}/projects/${projectId}`, this.authLogic.getAuth());\n            console.log(res);\n            return ({\"status\": OK_STATUS, \"message\": \"Операция завершилась успешно\", \"project\": res.data.project});\n        }\n        catch (error) {\n            return {\"status\": ERROR_STATUS, \"message\": error.message}\n        }\n    }\n\n    async addProject(name, notes) {\n        try {\n            if (!this.authLogic.authorized) return {\"error\": \"Пользователь не авторизован\"}\n            const res = await axios.post(`${API_URL}/projects`, { name, notes }, this.authLogic.getAuth());\n            await this.getProjects();\n            console.log(res);\n            return ({\"status\": OK_STATUS, \"message\": \"Операция завершилась успешно\", \"project\": res.data.project});\n\n        }\n        catch (error) {\n            return {\"status\": ERROR_STATUS, \"message\": error.message}\n        }\n    }\n\n    async updateProject(projectId, name, notes) {\n        try {\n            if (!this.authLogic.authorized) return {\"error\": \"Пользователь не авторизован\"}\n            const res = await axios.put(`${API_URL}/projects/${projectId}`, { name, notes }, this.authLogic.getAuth());            \n            await this.getProjects();\n            return ({\"status\": OK_STATUS, \"message\": \"Операция завершилась успешно\", \"project\": res.data.project});\n        }\n        catch (error) {\n            return {\"status\": ERROR_STATUS, \"message\": error.message}\n        }\n    }\n\n    async deleteProject(projectId) {\n        try {\n            if (!this.authLogic.authorized) return {\"error\": \"Пользователь не авторизован\"}\n            const res = await axios.delete(`${API_URL}/projects/${projectId}`, this.authLogic.getAuth());\n            await this.getProjects();\n            console.log(res);\n            return ({\"status\": OK_STATUS, \"message\": \"Операция завершилась успешно\"});\n        }\n        catch (error) {\n            return {\"status\": ERROR_STATUS, \"message\": error.message}\n        }\n    }\n\n    async getRadargramLink(projectId, radargramId) {\n        try {\n            if (!this.authLogic.authorized) return {\"error\": \"Пользователь не авторизован\"}\n            const res = await axios.get(`${API_URL}/projects/${projectId}/radargrams/${radargramId}/link`, this.authLogic.getAuth());\n            return ({\"status\": OK_STATUS, \"message\": \"Операция завершилась успешно\", \"link\": res.data});\n        }\n        catch (error) {\n            return {\"status\": ERROR_STATUS, \"message\": error.message}\n        }\n    }\n\n    async deleteRadargram(projectId, radargramId) {\n        try {\n            if (!this.authLogic.authorized) return {\"error\": \"Пользователь не авторизован\"}\n            const res = await axios.delete(`${API_URL}/projects/${projectId}/radargrams/${radargramId}`, this.authLogic.getAuth());\n            console.log(res);\n            return ({\"status\": OK_STATUS, \"message\": \"Операция завершилась успешно\"});\n        }\n        catch (error) {\n            return {\"status\": ERROR_STATUS, \"message\": error.message}\n        }\n    }\n\n    async uploadRadargram(projectId, formData) {\n        try {\n            if (!this.authLogic.authorized) return {\"error\": \"Пользователь не авторизован\"}\n            const res = await axios.post(`${API_URL}/projects/${projectId}/radargrams`, formData, {\n                headers: {\n                  'Content-Type': 'multipart/form-data'\n                }\n            }, this.authLogic.getAuth());\n            console.log(\"uploadRadargram\", res);\n            return await this.openProject(projectId);\n        }\n        catch (error) {\n            return {\"status\": ERROR_STATUS, \"message\": error.message}\n        }        \n    }\n\n    setRadargrams(radargrams) {\n        this.radargrams = radargrams;\n        this.radargrams.sort((rad1, rad2) => rad1.id - rad2.id)\n    }\n\n\n    async getTraces(projectId, radargramId, startNum, finishNum, stage) {\n        try {\n            if (!this.authLogic.authorized) return {\"status\": ERROR_STATUS, \"message\": \"Пользователь не авторизован\"}\n            const res = await axios.get(`${API_URL}/projects/${projectId}/radargrams/${radargramId}/traces/amplitudes/${startNum}/${finishNum}/${stage}`, this.authLogic.getAuth());\n            console.log(\"getTraces\", res);\n            return ({\"status\": OK_STATUS, \"message\": \"Операция завершилась успешно\"});\n        }\n        catch (error) {\n            return {\"status\": ERROR_STATUS, \"message\": error.message}\n        }\n    }\n\n}\n\nexport default Logic;","import React, { Fragment } from \"react\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nclass MainMenu extends React.Component {\r\n  render() {\r\n    return (\r\n      <Navbar bg=\"light\" expand=\"lg\">\r\n        <Navbar.Brand>Хранилище радарограмм</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\" onSelect={this.props.onSelectMenuElement}>\r\n\r\n            {!this.props.logged &&\r\n              <Fragment>\r\n                <Nav.Link disabled={false} eventKey=\"registration\">Регистрация</Nav.Link>\r\n                <Nav.Link disabled={false} eventKey=\"enter\">Вход</Nav.Link>\r\n              </Fragment>\r\n            }\r\n            {this.props.logged &&\r\n              <Fragment>\r\n                <Button variant=\"primary\">{this.props.username}</Button>\r\n                <Nav.Link disabled={false} eventKey=\"exit\">Выход</Nav.Link>\r\n              </Fragment>\r\n            }\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainMenu;\r\n","import React from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Spinner from \"react-bootstrap/Spinner\";\n\n\nclass Sign extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      loading: false\n    };\n  }\n\n  updateState = (newState) => {\n    this.setState((prevState) => {\n      return {\n        ...prevState,\n        ...newState\n      };\n    });\n  }\n\n\n  onChangeUsername = (event) => {\n    const username = event.target.value;\n    this.updateState({ username });\n  }\n\n  onChangePassword = (event) => {\n    const password = event.target.value;\n    this.updateState({ password });\n  }\n\n  onOk = async (event) => {\n    if (event === undefined) return;\n    if (this.state.username === \"\" || this.state.password === \"\") return;\n    event.preventDefault();\n    this.updateState({ loading: true })\n    await this.props.onOkSign(this.state.username, this.state.password);\n    this.updateState({ loading: false })\n  }\n\n  onCancel = (event) => {\n    event.preventDefault();\n    this.props.onCancelSign(this.state.username, this.state.password);\n  }\n\n  render() {\n    let alert = null;\n    if (this.props.error) {\n      alert = <Alert variant=\"danger\">\n        {this.props.error}\n      </Alert>\n    }\n\n    let spinner = null;\n    if (this.state.loading) {\n      spinner = <Spinner animation=\"border\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </Spinner>\n    }\n\n    return (\n      <Modal show={true} onHide={this.onCancel}>\n        <Modal.Header closeButton>\n          <Modal.Title>{this.props.isRegistration ? \"Регистрация\" : \"Вход\"}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group>\n              <Form.Label>Логин</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={this.state.username}\n                onChange={this.onChangeUsername}\n                required\n                placeholder=\"Введите имя пользователя\"\n              />\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Пароль</Form.Label>\n              <Form.Control\n                type=\"password\"\n                value={this.state.password}\n                onChange={this.onChangePassword}\n                required\n                placeholder=\"Введите пароль\"\n              />\n            </Form.Group>\n          </Form>\n          {alert}\n        </Modal.Body>\n        <Modal.Footer>\n          { spinner }\n          <Button variant=\"primary\" onClick={this.onOk}>\n            ОК\n          </Button>\n          <Button variant=\"secondary\" onClick={this.onCancel} >\n            Отмена\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nexport default Sign;\n","import React from \"react\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\n\nclass Welcome extends React.Component {\n  render() {\n    return (\n        <Jumbotron>\n        <h1>ООО \"ТИМ\"</h1>\n      </Jumbotron>\n    );\n  }\n}\n\nexport default Welcome;","import React from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\n\n\nclass ProjectOptions extends React.Component {\n  render() {\n    return (\n      <Modal show={this.props.show} onHide={this.props.onCancelProjectOptions}>\n        <Modal.Header closeButton>\n          <Modal.Title>Свойства проекта</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group>\n              <Form.Label>Имя</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={this.props.name}\n                onChange={this.props.onChangeName}\n              />\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Комментарии</Form.Label>\n              <Form.Control\n                type=\"textarea\"\n                value={this.props.notes}\n                onChange={this.props.onChangeNotes}\n              />\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.props.onCancelProjectOptions}>\n            Отмена\n          </Button>\n          <Button variant=\"primary\" onClick={this.props.onChangeProjectOptions}>\n            ОК\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nexport default ProjectOptions;\n","import React, { Fragment } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport CardColumns from \"react-bootstrap/CardColumns\";\nimport Container from \"react-bootstrap/Container\";\n\nimport ProjectOptions from \"./ProjectOptions\";\n\n\nclass Projects extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      notes: \"\",\n      isOpenOptions: false,\n      currentProjectId: null,\n      isAddNewProject: false,\n    };\n  }\n\n  clearState = () => {\n    this.updateState({\n      name: \"\",\n      notes: \"\",\n      isOpenOptions: false,\n      currentProjectId: null,\n      isAddNewProject: false,\n    });\n  }\n\n\n\n  updateState = (newState) => {\n    this.setState((prevState) => {\n      return {\n        ...prevState,\n        ...newState\n      };\n    });\n  }\n\n  findProjectById = (id) => {\n    return this.props.projects.find(item => item.id === id)\n  }\n\n  onChangeName = (event) => {\n    const name = event.target.value;\n    this.updateState({ name });\n  }\n\n  onChangeNotes = (event) => {\n    const notes = event.target.value;\n    this.updateState({ notes });\n  }\n\n  addProject = async (name, notes) => {\n    await this.props.addProject(name, notes)\n    this.clearState()\n  }\n\n  changeProject = async (projectId, name, notes) => {\n    await this.props.changeProject(projectId, name, notes)\n    this.clearState()\n  }\n\n  onCancelProjectOptions = async () => {\n    this.clearState()\n  }\n\n  onChangeProjectOptions = async () => {\n    if (this.state.isAddNewProject)\n      await this.addProject(this.state.name, this.state.notes)\n    else\n      await this.changeProject(this.state.currentProjectId, this.state.name, this.state.notes)\n  }\n\n  openDialogToAddProject = () => {\n    this.updateState({ name: \"\", notes: \"\", isOpenOptions: true, currentProjectId: null, isAddNewProject: true });\n  }\n\n  openDialogToChangeProject = (event) => {\n    const currentProjectId = Number(event.target.id);\n    const project = this.findProjectById(currentProjectId);\n    if (project === undefined) return\n    this.updateState({\n      name: project.name, notes: project.notes, isOpenOptions: true, currentProjectId,\n      isAddNewProject: false\n    });\n  }\n\n  openProject = async (event) => {\n    const currentProjectId = Number(event.target.id);\n    await this.props.openProject(currentProjectId);\n  }\n\n  deleteProject = async (event) => {\n    const currentProjectId = Number(event.target.id);\n    await this.props.deleteProject(currentProjectId);\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <Container>\n          <h1>Проекты</h1>\n          <CardColumns>\n            {\n              this.props.projects.map((item, index, array) => (\n                <Card style={{ width: '18rem' }} key={item.id}>\n                  <Card.Body>\n                    <Card.Title>{item.name} ({item.id})</Card.Title>\n                    <Card.Text>{item.notes}</Card.Text>\n                    <Card.Link href=\"#\" id={item.id} onClick={this.openProject}>Открыть</Card.Link>\n                    <Card.Link href=\"#\" id={item.id} onClick={this.openDialogToChangeProject}>Изменить</Card.Link>\n                    <Card.Link href=\"#\" id={item.id} onClick={this.deleteProject}>Удалить</Card.Link>\n                  </Card.Body>\n                  <Card.Footer>\n                    <small className=\"text-muted\">{item.createion_datetime}</small>\n                  </Card.Footer>\n                </Card>\n              ))\n            }\n            <Card style={{ width: '18rem' }}>\n              <Card.Body>\n                <Card.Link href=\"#\" onClick={this.openDialogToAddProject}>Добавить новый проект...</Card.Link>\n              </Card.Body>\n            </Card>\n          </CardColumns>\n        </Container>\n\n        <ProjectOptions\n          show={this.state.isOpenOptions}\n          name={this.state.name}\n          notes={this.state.notes}\n          onChangeName={this.onChangeName}\n          onChangeNotes={this.onChangeNotes}\n          onCancelProjectOptions={this.onCancelProjectOptions}\n          onChangeProjectOptions={this.onChangeProjectOptions}\n        />\n      </Fragment>\n    );\n  }\n}\n\nexport default Projects;","import React, { Fragment } from \"react\";\n\n// import Plot from 'react-plotly.js';\nimport Plotly from \"plotly.js\";\nimport createPlotlyComponent from \"react-plotly.js/factory\";\nconst Plot = createPlotlyComponent(Plotly);\n\nclass RadImage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            // name: \"\",\n            // notes: \"\",\n            // isOpenOptions: false,\n            // currentProjectId: null,\n            // isAddNewProject: false,\n        };\n    }\n\n    clearState = () => {\n        this.updateState({\n            // name: \"\",\n            // notes: \"\",\n            // isOpenOptions: false,\n            // currentProjectId: null,\n            // isAddNewProject: false,\n        });\n    }\n\n    render() {\n        return (\n            <Plot\n                show={this.props.show}\n                data={[\n                    {\n                        //x: [10, 20, 30],\n                        //y: [10, 20, 30, 40, 50, 60, 70],\n                        //z: [[1,2,3], [4,5,6], [7,8,9]],//this.props.data.Data,\n                        type: \"heatmap\",\n                    },\n                ]}\n                layout={{\n                    autosize: true,\n                    yaxis: { autorange: \"reversed\", title: { text: \"Samples\" } },\n                    xaxis: { title: { text: \"Traces\" } },\n                }}\n                useResizeHandler={true}\n                config={{\n                    // displayModeBar: false,\n                    scrollZoom: true,\n                    responsive: true,\n                }}\n                style={{ width: \"100vw\", height: \"75vh\" }}\n            />\n\n\n        )\n    }\n}\n\nexport default RadImage;","import React, { Fragment } from \"react\";\n\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Table from \"react-bootstrap/Table\";\n\nimport RadImage from \"./RadImage\";\n\n\nclass Radargram extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            // name: \"\",\n            // notes: \"\",\n            // isOpenOptions: false,\n            // currentProjectId: null,\n            // isAddNewProject: false,\n        };\n    }\n\n    clearState = () => {\n        this.updateState({\n            // name: \"\",\n            // notes: \"\",\n            // isOpenOptions: false,\n            // currentProjectId: null,\n            // isAddNewProject: false,\n        });\n    }\n\n    deleteRadargram = async () => {\n        const projectId = this.props.project.id;\n        const radargramId = this.props.radargram.id;\n        await this.props.deleteRadargram(projectId, radargramId);\n    }\n\n    getRadargramLink = async () => {\n        const projectId = this.props.project.id;\n        const radargramId = this.props.radargram.id;\n        await this.props.getRadargramLink(projectId, radargramId);\n    }\n\n    onCollapseRadargram = () => {\n        console.log(\"HELLO\");\n    }\n\n    render() {\n        return (\n\n            <Accordion>\n                <Card>\n                    <Card.Header>\n                        <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n                            Параметры\n                              </Accordion.Toggle>\n                    </Card.Header>\n                    <Accordion.Collapse eventKey=\"0\">\n                        <Card.Body>\n                            <Table striped bordered hover>\n                                <thead>\n                                    <tr>\n                                        <th>Параметр</th>\n                                        <th>Значение</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr> <td>Название</td> <td>{this.props.radargram.name}</td> </tr>\n                                    <tr> <td>Комментарии</td> <td>{this.props.radargram.notes}</td> </tr>\n                                    <tr> <td>Шаг сканирования, м</td> <td>{this.props.radargram.stage_between_traces}</td> </tr>\n                                    <tr> <td>Временная развертка, нс</td> <td>{this.props.radargram.time_base}</td> </tr>\n                                    <tr> <td>Количество трасс</td> <td>{this.props.radargram.traces_count}</td> </tr>\n                                    <tr> <td>Количество временных отсчетов</td> <td>{this.props.radargram.samples_count}</td> </tr>\n                                    <tr> <td>Расстояние между антеннами, м</td> <td>{this.props.radargram.distance_between_antennas}</td> </tr>\n                                    <tr> <td>Модель георадара</td> <td>{this.props.radargram.GPR_unit}</td> </tr>\n                                    <tr> <td>Антенна</td> <td>{this.props.radargram.antenna_name}</td> </tr>\n                                    <tr> <td>Центральная частота, МГц</td> <td>{this.props.radargram.frequency}</td> </tr>\n                                    <tr> <td>Дата создания</td> <td>{this.props.radargram.creation_datetime}</td> </tr>\n                                </tbody>\n                            </Table>\n                        </Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n                <Card>\n                    <Card.Header>\n                        <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\" onClick={this.onCollapseRadargram}>\n                            Радарограмма\n                        </Accordion.Toggle>\n                    </Card.Header>\n                    <Accordion.Collapse eventKey=\"1\">\n                        <Card.Body>\n                            <RadImage project={this.props.project} radargram={this.props.radargram}/>\n                        </Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n                <Card>\n                    <Card.Header>\n                        <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"2\">\n                            Действия\n                        </Accordion.Toggle>\n                    </Card.Header>\n                    <Accordion.Collapse eventKey=\"2\">\n                        <Card.Body>\n                            <p><a href=\"#\" onClick={this.deleteRadargram}>Удалить радарограмму</a></p>\n                            <p><a href=\"#\" onClick={this.getRadargramLink}>Скачать радарограмму</a></p>\n                        </Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n            </Accordion>\n        );\n    }\n}\n\nexport default Radargram;","import React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Modal from \"react-bootstrap/Modal\";\n\n\nclass DialogOpenRad extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedFile: null,\n      loading: false,\n    };\n  }\n\n  setLoading = (loading) => {\n    this.setState((prevState) => {\n      return {\n        ...prevState,\n        loading: loading,\n      };\n    });\n  };\n\n  onFileChange = (event) => {\n    console.log(\"onFileChange\");\n    if (event.target === null) return;\n    if (event.target.files == null) return;\n    const selectedFile = event.target.files[0];\n    console.log(selectedFile);\n    this.setState((prevState) => {\n      return {\n        ...prevState,\n        selectedFile: selectedFile,\n      };\n    });\n  };\n\n  onFileUpload = async (event) => {\n    console.log(\"onFileUpload\");\n    let data;\n    if (this.state.selectedFile === null) {\n      data = null;\n    } else {\n      let formData = new FormData();\n      formData.append(\n        \"file\",\n        this.state.selectedFile,\n        this.state.selectedFile.name\n      );\n      this.setLoading(true);\n      this.props.fileUpload(formData);\n    }\n  };\n\n  render() {\n    const btnCaption = !this.state.loading ? (\n      \"Открыть\"\n    ) : (\n      <Spinner\n        as=\"span\"\n        animation=\"border\"\n        size=\"sm\"\n        role=\"status\"\n        aria-hidden=\"true\"\n      />\n    );\n\n    return (\n      <Form>\n        <Modal show={this.props.show} onHide={this.props.onCancelOpenRad}>\n          <Modal.Header closeButton>\n            <Modal.Title>Добавить радарограмму</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Form.File id=\"rad-file\" onChange={this.onFileChange} />\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={this.props.onCancelOpenRad}>\n              Отмена\n            </Button>\n            <Button\n              variant=\"primary\"\n              disabled={this.state.selectedFile === null}\n              onClick={this.onFileUpload}\n            >\n              {btnCaption}\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </Form>\n    );\n  }\n}\n\nexport default DialogOpenRad;\n","import React, { Fragment } from \"react\";\r\nimport Tab from \"react-bootstrap/Tab\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\n\r\nimport Radargram from \"./Radargram\";\r\nimport DialogOpenRad from \"./DialogOpenRad\";\r\n\r\n\r\nclass Radargrams extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isOpenDialog: false\r\n    };\r\n  }\r\n\r\n  updateState = (newState) => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        ...newState\r\n      };\r\n    });\r\n  }  \r\n\r\n  clearState = () => {\r\n    this.updateState({\r\n      isOpenDialog: false\r\n    });\r\n  }\r\n\r\n  cancelOpenRad = () => {\r\n    this.updateState({\r\n      isOpenDialog: false\r\n    });\r\n  }\r\n\r\n  openDialog = () => {\r\n    this.updateState({\r\n      isOpenDialog: true\r\n    });\r\n  }\r\n\r\n  fileUpload = (formData) => {\r\n    this.props.addRadargram(this.props.project.id, formData);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <DialogOpenRad \r\n          show = {this.state.isOpenDialog}\r\n          onCancelOpenRad = {this.cancelOpenRad}\r\n          fileUpload = {this.fileUpload}\r\n        />\r\n        <Nav\r\n          activeKey=\"/home\"\r\n          onSelect={(selectedKey) => this.props.closeProject()}\r\n        >\r\n          <Nav.Item>\r\n            <Nav.Link href=\"#\">К проектам</Nav.Link>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <Nav.Link eventKey=\"disabled\" disabled>\r\n              Проект: <b>{this.props.project.name}</b>\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n        </Nav>\r\n\r\n        <Tab.Container id=\"list-group-tabs-example\" defaultActiveKey=\"#link1\">\r\n          <Row>\r\n            <Col sm={2}>\r\n              <ListGroup>\r\n                {\r\n                  this.props.radargrams.map((item, index, array) => (\r\n                    <ListGroup.Item action href={`#${item.id}`} key={`listkey${item.id}`}>\r\n                      {item.name}\r\n                    </ListGroup.Item>\r\n                  ))\r\n                }\r\n              </ListGroup>\r\n              <ListGroup.Item key={`listkey_new`}>\r\n                <a href=\"#\" onClick={this.openDialog}>Добавить</a>\r\n              </ListGroup.Item>\r\n            </Col>\r\n            <Col sm={10}>\r\n              <Tab.Content>\r\n                {\r\n                  this.props.radargrams.map((item, index, array) => (\r\n                    <Tab.Pane eventKey={`#${item.id}`} key={`contentkey${item.id}`}>\r\n                      <Radargram \r\n                        project={this.props.project} \r\n                        radargram={item} \r\n                        key={`radkey${item.id}`} \r\n                        deleteRadargram={this.props.deleteRadargram}\r\n                        getRadargramLink={this.props.getRadargramLink}\r\n                      />\r\n                    </Tab.Pane>\r\n                  ))\r\n                }\r\n              </Tab.Content>\r\n            </Col>\r\n          </Row>\r\n        </Tab.Container>\r\n      </Fragment>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Radargrams;\r\n\r\n\r\n\r\n\r\n\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React, { Fragment } from \"react\";\n\nimport { OK_STATUS, STATUS_NOT_LOGGED, STATUS_REGISTRATING, STATUS_ENTERING, STATUS_LOGGED, PAGE_PROJECTS, PAGE_RADARGRAMS } from \"./Global\";\nimport Logic from \"./logic/Logic\";\n\nimport MainMenu from \"./components/MainMenu\";\n// import Rad from \"./components/Rad\";\n// import ProjectOptions from \"./components/ProjectOptions\";\nimport Sign from \"./components/Sign\";\nimport Welcome from \"./components/Welcome\";\nimport Projects from \"./components/Projects\";\nimport Radargrams from \"./components/Radargrams\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.logic = new Logic();\n    this.state = {\n      status: STATUS_LOGGED, //STATUS_NOT_LOGGED,\n      page: PAGE_PROJECTS,\n      sign_error: null,\n      is_loaded_data: false,\n      waiting: false,\n    };\n\n  }\n\n  async componentDidMount() {\n    this.getProjects();\n  }\n\n\n  updateState = (newState) => {\n    this.setState((prevState) => {\n      return {\n        ...prevState,\n        ...newState\n      };\n    });\n  }\n\n\n  registrate = async (username, password) => {\n    const res = await this.logic.authLogic.registrate(username, password);\n    if (res[\"status\"] === OK_STATUS) {\n      this.getProjects();\n      this.updateState({ \"status\": STATUS_LOGGED, sign_error: null });\n    }\n    else\n      this.updateState({ sign_error: res[\"message\"] });\n  }\n\n\n  logIn = async (username, password) => {\n    const res = await this.logic.authLogic.logIn(username, password);\n    if (res[\"status\"] === OK_STATUS) {\n      this.getProjects();\n      this.updateState({ \"status\": STATUS_LOGGED, sign_error: null });\n    }\n    else\n      this.updateState({ sign_error: res[\"message\"] });\n\n  }\n\n\n  logOut = async () => {\n    this.updateState({ \"status\": STATUS_NOT_LOGGED, sign_error: null });\n  }\n\n\n  getProjects = async () => {\n    if (this.state.waiting) return;\n    this.updateState({ waiting: true });\n    const res = await this.logic.getProjects()\n    if (res[\"status\"] === OK_STATUS)\n      this.updateState({ is_loaded_data: true, waiting: false })\n    else\n      this.updateState({ waiting: false })\n  }\n\n\n  addProject = async (name, notes) => {\n    if (this.state.waiting) return;\n    this.updateState({ waiting: true });\n    const res = await this.logic.addProject(name, notes)\n    if (res[\"status\"] === OK_STATUS)\n      this.updateState({ is_loaded_data: true, waiting: false })\n    else\n      this.updateState({ waiting: false })\n  }\n\n\n  changeProject = async (projectId, name, notes) => {\n    if (this.state.waiting) return;\n    this.updateState({ waiting: true });\n    const res = await this.logic.updateProject(projectId, name, notes)\n    if (res[\"status\"] === OK_STATUS)\n      this.updateState({ is_loaded_data: true, waiting: false })\n    else\n      this.updateState({ waiting: false })\n  }\n\n\n  deleteProject = async (projectId) => {\n    if (this.state.waiting) return;\n    this.updateState({ waiting: true });\n    const res = await this.logic.deleteProject(projectId)\n    if (res[\"status\"] === OK_STATUS)\n      this.updateState({ is_loaded_data: true, waiting: false })\n    else\n      this.updateState({ waiting: false })\n  }\n\n  openProject = async (projectId) => {\n    if (this.state.waiting) return;\n    this.updateState({ waiting: true });\n    const res = await this.logic.openProject(projectId)\n    if (res[\"status\"] === OK_STATUS) {\n      this.updateState({ is_loaded_data: true, waiting: false, page: PAGE_RADARGRAMS })\n    }\n    else {\n      this.updateState({ waiting: false, page: PAGE_PROJECTS })\n    }\n  }\n\n  closeProject = () => {\n    this.updateState({ page: PAGE_PROJECTS })\n  }\n\n\n  deleteRadargram = async (projectId, radargramId) => {\n    if (this.state.waiting) return;\n    this.updateState({ waiting: true });\n    const res = await this.logic.deleteRadargram(projectId, radargramId)\n    if (res[\"status\"] === OK_STATUS)\n      this.updateState({ waiting: false, page: PAGE_PROJECTS })\n    else\n      this.updateState({ waiting: false })\n  }\n\n\n  getRadargramLink = async (projectId, radargramId) => {\n    const res = await this.logic.getRadargramLink(projectId, radargramId)\n    window.open(res.link);\n  }\n\n\n  addRadargram = async (projectId, formData) => {\n    if (this.state.waiting) return;\n    this.updateState({ waiting: true });\n    const res = await this.logic.uploadRadargram(projectId, formData)\n    if (res[\"status\"] === OK_STATUS) {\n      await this.openProject(projectId);\n    }\n    else {\n      this.updateState({ waiting: false, page: PAGE_RADARGRAMS })\n    }\n  }\n\n\n\n  onSelectMenuElement = (selectedKey) => {\n    switch (selectedKey) {\n      case \"registration\":\n        this.updateState({ \"status\": STATUS_REGISTRATING });\n        break\n      case \"enter\":\n        this.updateState({ \"status\": STATUS_ENTERING });\n        break\n      case \"exit\":\n        this.logOut();\n        break\n      default:\n        break\n    }\n  }\n\n\n  getCurrentComponent = () => {\n    switch (this.state.page) {\n      case PAGE_PROJECTS:\n        return (\n          <Projects\n            projects={this.logic.projects}\n            currentProjectId={this.logic.currentProjectId}\n            addProject={this.addProject}\n            changeProject={this.changeProject}\n            openProject={this.openProject}\n            deleteProject={this.deleteProject}\n          />\n        )\n      case PAGE_RADARGRAMS:\n        return (\n          <Radargrams \n            radargrams={this.logic.radargrams}\n            project={this.logic.getCurrentProject()}\n            closeProject={this.closeProject}\n            deleteRadargram={this.deleteRadargram}\n            getRadargramLink={this.getRadargramLink}\n            addRadargram={this.addRadargram}\n          />\n        )\n      default:\n        break\n    }\n  }\n\n  render() {\n    let CurrentComponent = null;\n    switch (this.state.status) {\n      case STATUS_LOGGED:\n        if (this.state.waiting) {\n          CurrentComponent = <Welcome />\n        }\n        else {\n          CurrentComponent = this.getCurrentComponent();\n        }\n        break\n      case STATUS_NOT_LOGGED:\n        CurrentComponent = <Welcome />\n        break\n      case STATUS_REGISTRATING:\n        CurrentComponent = <Sign isRegistration={true} error={this.state.sign_error} onOkSign={this.registrate} onCancelSign={this.logOut} />\n        break\n      case STATUS_ENTERING:\n        CurrentComponent = <Sign isRegistration={false} error={this.state.sign_error} onOkSign={this.logIn} onCancelSign={this.logOut} />\n        break\n      default:\n        break\n    }\n    return (\n      <Fragment>\n        <MainMenu username={this.logic.authLogic.username} logged={this.state.status === STATUS_LOGGED} onSelectMenuElement={this.onSelectMenuElement} />\n        {CurrentComponent}\n      </Fragment>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}